-- Slippage pattern analysis across quarters - generated by ARC
{{
  config(
    materialized='table',
    description='Slippage pattern analysis across quarters by segment and region'
  )
}}

WITH opportunity_data AS (
  SELECT 
    Id,
    Name,
    Amount,
    CloseDate,
    StageName,
    IsClosed,
    IsWon,
    CreatedDate,
    OwnerId,
    AccountId
  FROM {{ ref('fct_opportunity') }}
  WHERE CloseDate >= DATEADD('month', -18, CURRENT_DATE())
),

account_data AS (
  SELECT 
    Id,
    Name as AccountName,
    Industry,
    Type as AccountType,
    Segment__c as Segment,
    Region__c as Region
  FROM {{ ref('dim_account') }}
),

owner_data AS (
  SELECT 
    Id,
    Name as OwnerName,
    Team__c as Team
  FROM {{ ref('dim_owner') }}
),

quarterly_slippage AS (
  SELECT 
    DATE_TRUNC('quarter', CloseDate) as CloseQuarter,
    COALESCE(a.Segment, 'Unknown') as Segment,
    COALESCE(a.Region, 'Unknown') as Region,
    COALESCE(o.Team, 'Unknown') as Team,
    COUNT(*) as TotalOpportunities,
    SUM(Amount) as TotalPipelineAmount,
    COUNT(CASE WHEN IsClosed = false AND CloseDate < CURRENT_DATE() THEN 1 END) as SlippedOpportunities,
    SUM(CASE WHEN IsClosed = false AND CloseDate < CURRENT_DATE() THEN Amount ELSE 0 END) as SlippedAmount,
    AVG(CASE WHEN IsClosed = false AND CloseDate < CURRENT_DATE() 
        THEN DATEDIFF('day', CloseDate, CURRENT_DATE()) ELSE NULL END) as AvgSlipDays
  FROM opportunity_data opp
  LEFT JOIN account_data a ON opp.AccountId = a.Id
  LEFT JOIN owner_data o ON opp.OwnerId = o.Id
  GROUP BY 1, 2, 3, 4
)

SELECT 
  CloseQuarter,
  Segment,
  Region,
  Team,
  TotalOpportunities,
  TotalPipelineAmount,
  SlippedOpportunities,
  SlippedAmount,
  AvgSlipDays,
  CASE 
    WHEN TotalOpportunities > 0 
    THEN ROUND(SlippedOpportunities * 100.0 / TotalOpportunities, 2)
    ELSE 0 
  END as SlippageRate,
  LAG(SlippedOpportunities) OVER (PARTITION BY Segment, Region ORDER BY CloseQuarter) as PrevQuarterSlipped,
  CASE 
    WHEN LAG(SlippedOpportunities) OVER (PARTITION BY Segment, Region ORDER BY CloseQuarter) > 0
    THEN ROUND((SlippedOpportunities - LAG(SlippedOpportunities) OVER (PARTITION BY Segment, Region ORDER BY CloseQuarter)) * 100.0 / 
               LAG(SlippedOpportunities) OVER (PARTITION BY Segment, Region ORDER BY CloseQuarter), 2)
    ELSE 0 
  END as QoQSlippageChange
FROM quarterly_slippage
ORDER BY CloseQuarter DESC, Segment, Region
